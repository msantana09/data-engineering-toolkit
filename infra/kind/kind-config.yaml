kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
containerdConfigPatches:
- |- 
  [plugins."io.containerd.grpc.v1.cri".registry.mirrors."kind-registry:5000"]
    endpoint = ["http://kind-registry:5000"]
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true"
  extraPortMappings:
  - containerPort: 80
    hostPort: 8080 # model api
    protocol: TCP
  - containerPort: 30081
    hostPort: 8081 # airflow
    protocol: TCP
  - containerPort: 30082
    hostPort: 8082 # trino
    protocol: TCP
  - containerPort: 30083
    hostPort: 8083 # superset
    protocol: TCP
  - containerPort: 30084
    hostPort: 8084 # datahub
    protocol: TCP
  - containerPort: 30090
    hostPort: 9090 # kafka UI
    protocol: TCP
  - containerPort: 30091
    hostPort: 9091 # kafka-schema-registry
    protocol: TCP
  - containerPort: 30092
    hostPort: 9092 # kafka-broker
    protocol: TCP
  - containerPort: 30888
    hostPort: 8888 # jupyter
    protocol: TCP
  - containerPort: 30901
    hostPort: 9001 # minio
    protocol: TCP
  extraMounts: # host >> container(control plane). This is for development purposes only.
  - hostPath: services/airflow/dags
    containerPath: /mnt/airflow/dags
  - hostPath: services/airflow/spark_scripts
    containerPath: /mnt/airflow/spark_scripts
  - hostPath: services/airflow/lib
    containerPath: /mnt/airflow/lib
  - hostPath: services/airflow/include
    containerPath: /mnt/airflow/include
  - hostPath: services/jupyter/notebooks
    containerPath: /mnt/jupyter/notebooks
  - hostPath: services/models/data
    containerPath: /mnt/models/data
  - hostPath: services/minio/data
    containerPath: /mnt/minio/data