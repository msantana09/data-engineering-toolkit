# Deploys a new MinIO Pod into the metadata.namespace Kubernetes namespace
#
# The `spec.containers[0].args` contains the command run on the pod
# The `/data` directory corresponds to the `spec.containers[0].volumeMounts[0].mountPath`
# That mount path corresponds to a Kubernetes HostPath which binds `/data` to a local drive or volume on the worker node where the pod runs
# 
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio
spec:
  containers:
  - name: minio
    image: quay.io/minio/minio:latest
    envFrom:
    - secretRef:
        name: env-secrets
    command:
    - /bin/bash
    - -c
    args: 
    - minio server /data --console-address :9001
    volumeMounts:
    - mountPath: /data
      name: localvolume  
    resources: 
      limits:
        cpu: "100m"
        memory: "512Mi"
  volumes:
  - name: localvolume
    hostPath: # MinIO generally recommends using locally-attached volumes
      path: /mnt/minio/data # Specify a path to a local drive or volume on the Kubernetes worker node
      type: DirectoryOrCreate # The path to the last directory must exist
---
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-init
  namespace: minio
spec:
  template:
    metadata:
      name: minio-init
    spec:
      containers:
        - name: model-init
          image:  minio/mc
          imagePullPolicy: Always
          envFrom:
          - secretRef:
              name: env-secrets
          command: ["/bin/bash", "-c"]
          args: [
            "sleep 5;\
            until (/usr/bin/mc --quiet config host add minio http://minio-api-svc.minio.svc.cluster.local:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD) do echo '...waiting...' && sleep 1; done; \
            /usr/bin/mc admin --quiet user add minio $MINIO_HIVE_USER $MINIO_HIVE_PASSWORD; \
            /usr/bin/mc admin --quiet user add minio $MINIO_AIRFLOW_USER $MINIO_AIRFLOW_PASSWORD; \ 
            /usr/bin/mc mb --quiet --ignore-existing minio/datalake; \
            /usr/bin/mc mb --quiet --ignore-existing minio/platform; \
            /usr/bin/mc admin --quiet policy attach minio readwrite --user $MINIO_HIVE_USER > /dev/null 2>&1; \
            /usr/bin/mc admin --quiet policy attach minio readwrite --user $MINIO_AIRFLOW_USER > /dev/null 2>&1; \
            echo \"done...\""
          ]
          resources:
            limits:
              cpu: "300m"
              memory: "0.5Gi"
            requests:
              cpu: "100m"
              memory: "256Mi"
          volumeMounts:
          - mountPath: /data
            name: localvolume  
      restartPolicy: Never
      volumes:
      - name: localvolume
        hostPath: # MinIO generally recommends using locally-attached volumes
          path: /mnt/minio/data # Specify a path to a local drive or volume on the Kubernetes worker node
          type: DirectoryOrCreate # The path to the last directory must exist

---
apiVersion: v1
kind: Service
metadata:
  name: minio-console-svc
  namespace: minio
spec:
  selector:
    app: minio
  type: NodePort
  ports:
    - port: 9001
      targetPort: 9001
      nodePort: 30901
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: minio-api-svc
  namespace: minio
spec:
  selector:
    app: minio
  type: NodePort
  ports:
    - port: 9000
      targetPort: 9000
      nodePort: 30900
      protocol: TCP 